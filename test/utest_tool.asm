#testing full functionality of the tool with random duration and volume but defined melody
#a song has been recorded with the virtual piano and saved in "saved.asm"
#keys have been pressed in this sequence: *) C-D-E-F-G-A-B-A#-G#-F#-D#C# (default octave)
#the sequence has been translated by hand to pitch values ("sequence" array) based on the sycall documentation 
#before recording, volume, duration and instrument have been randomly selected by hand
#duration value should be between 0 and 3000
#instrument value should be between 0 and 127
#volume value should be between 0 and 127

#translated the sequence *) by hand into values 
.data
sequence:
.word 60 62 64 65 67 69 71 70 68 66 63 61

.text
utest_begin:
	li t3, 0
	li t4, 12
	la a5, sequence
	jal initialize 
	j test_melody

#compares the saved melody with *)
test_melody:
	lw t1, (a4)
	lw t2, (a5)
	beq t1, t2, correct_pitch
	j utest_failed
	
#test if the pressed keys values are correct
correct_pitch:
	addi a6, a6, 1
	addi a4, a4, 4
	addi a5, a5, 4
	addi t3, t3, 1
	bne t3, t4, test_melody
	li a0, 1
	j test_duration
	
#test if duration value is in correct range	
test_duration:
	li t0, 0
	blt a1, t0, utest_failed
	li t0, 3000
	blt t0, a1, utest_failed
	li a1, 1
	j test_instrument
	
#test if instrument value is in correct range
test_instrument:
	li t0, 0
	blt a2, t0, utest_failed
	li t0, 127
	blt t0, a2, utest_failed
	li a2, 1
	j test_volume
	
#test if volume value is in correct range
test_volume:
	li t0, 0
	blt a3, t0, utest_failed
	li t0, 127
	blt t0, a3, utest_failed
	li a3, 1
	j utest_exit
	
#fails if at least a0, a1, a2 or a3 not store 1
utest_failed:
	li a7, 10
	ecall


#checking the values that are automatically generated by using the Virtual Piano tool
.include "utest_saved.asm" 
 
#success if a0, a1, a2, a3 store 1
utest_exit:
	li a7, 10
	ecall